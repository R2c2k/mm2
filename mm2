local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v84=0;local v85;while true do if (v84==0) then v85=v2(v0(v30,16));if v19 then local v127=0;local v128;while true do if (v127==1) then return v128;end if (v127==0) then v128=v5(v85,v19);v19=nil;v127=1;end end else return v85;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v86=0 + 0 ;local v87;while true do if (v86==(0 -0)) then v87=(v31/((5 -3)^(v32-(1 -0))))%((4 -2)^(((v33-(620 -(555 + 63 + 1))) -(v32-(1 + 0))) + (932 -(857 + (1031 -(892 + 65)))))) ;return v87-(v87%(569 -(367 + 201))) ;end end else local v88=(929 -(214 + 713))^(v32-1) ;return (((v31%(v88 + v88))>=v88) and (1 + 0)) or (117 -(32 + 85)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + (4 -2) ;return (v36 * (472 -216)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (4 -1) );v18=v18 + (354 -(87 + 194 + 69)) ;return (v40 * (16777396 -(67 + (449 -336)))) + (v39 * (48056 + 17480)) + (v38 * (628 -372)) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=953 -(802 + 150) ;local v44=(v20(v42,2 -1 ,36 -16 ) * ((1 + 1 + 0)^(1029 -(915 + 82)))) + v41 ;local v45=v20(v42,59 -38 ,31);local v46=((v20(v42,32)==(1 + 0)) and  -(1 -0)) or (1188 -(1069 + 118)) ;if (v45==(0 -0)) then if (v44==(0 -0)) then return v46 * 0 ;else v45=(1 -0) + 0 ;v43=0 -0 ;end elseif (v45==(2031 + 16)) then return ((v44==(791 -(368 + (861 -(145 + 293))))) and (v46 * ((3 -2)/(18 -(10 + (438 -(44 + 386))))))) or (v46 * NaN) ;end return v8(v46,v45-((5420 -(998 + 488)) -2911) ) * (v43 + (v44/((444 -(416 + 9 + 17))^(165 -(93 + 20))))) ;end local function v25(v47) local v48=772 -((1086 -(261 + 624)) + 571) ;local v49;local v50;while true do if (v48==(1140 -(116 + 1022))) then v50={};for v114=4 -3 , #v49 do v50[v114]=v2(v1(v3(v49,v114,v114)));end v48=(3 -1) + 1 ;end if (v48==(0 -0)) then v49=nil;if  not v47 then local v120=(1080 -(1020 + 60)) -0 ;while true do if (v120==0) then v47=v23();if (v47==(859 -(814 + 45))) then return "";end break;end end end v48=2 -1 ;end if (3==v48) then return v6(v50);end if (v48==(1 + 0)) then v49=v3(v16,v18,(v18 + v47) -1 );v18=v18 + v47 ;v48=1 + (1424 -(630 + 793)) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v89,v90,v91,v92,v93,v94,v95,v96) local v89=(function() return 0;end)();local v90=(function() return;end)();local v92=(function() return;end)();while true do if (v89==(0 + 0)) then local v121=(function() return 0;end)();local v122=(function() return;end)();while true do if (v121==0) then v122=(function() return 285 -(134 + 151) ;end)();while true do if ((699 -(208 + 490))~=v122) then else v89=(function() return  #"[";end)();break;end if (v122==0) then v90=(function() return v91();end)();v92=(function() return nil;end)();v122=(function() return 1666 -(970 + 695) ;end)();end end break;end end end if (v89== #"{") then if (v90== #"<") then v92=(function() return v91()~=0 ;end)();elseif (v90==(1 + 1)) then v92=(function() return v93();end)();elseif (v90== #"xnx") then v92=(function() return v94();end)();end v95[v96]=(function() return v92;end)();break;end end return v89,v90,v91,v92,v93,v94,v95,v96;end;end)();local v52=(function() return function(v97,v98,v99,v100,v101,v102,v103,v104,v105) local v106=(function() return 0 + 0 ;end)();local v97=(function() return;end)();local v98=(function() return;end)();while true do if (v106~=0) then else local v124=(function() return 836 -(660 + 176) ;end)();while true do if (1==v124) then v106=(function() return 1991 -(582 + 1408) ;end)();break;end if (v124~=0) then else v97=(function() return 0;end)();v98=(function() return nil;end)();v124=(function() return 1 + 0 ;end)();end end end if (v106==(1 -0)) then local v125=(function() return 202 -(14 + 188) ;end)();while true do if (v125==(0 -0)) then while true do if (v97==(1824 -(1195 + 629))) then v98=(function() return v99();end)();if (v100(v98, #"}", #"}")~=(675 -(534 + 141))) then else local v169=(function() return 0 -0 ;end)();local v170=(function() return;end)();local v171=(function() return;end)();local v172=(function() return;end)();while true do if (v169~=2) then else if (v100(v171, #"|", #":")== #" ") then v172[1 + 1 ]=(function() return v103[v172[2]];end)();end if (v100(v171,2,782 -(162 + 618) )~= #"|") then else v172[ #"xxx"]=(function() return v103[v172[ #"91("]];end)();end v169=(function() return 3;end)();end if (v169~=(1 + 0)) then else local v175=(function() return 0;end)();while true do if (v175==1) then v169=(function() return 2 + 0 ;end)();break;end if (v175==(0 -0)) then local v180=(function() return 0;end)();while true do if (v180==(0 -0)) then v172=(function() return {v101(),v101(),nil,nil};end)();if (v170==(0 + 0)) then local v181=(function() return 0 + 0 ;end)();local v182=(function() return;end)();while true do if ((0 + 0)~=v181) then else v182=(function() return 396 -(115 + 281) ;end)();while true do if ((0 -0)~=v182) then else v172[ #"19("]=(function() return v101();end)();v172[ #"?id="]=(function() return v101();end)();break;end end break;end end elseif (v170== #">") then v172[ #"nil"]=(function() return v102();end)();elseif (v170==(2 + 0)) then v172[ #"19("]=(function() return v102() -(2^(6 + 10)) ;end)();elseif (v170~= #"xxx") then else local v187=(function() return 0 -0 ;end)();local v188=(function() return;end)();while true do if (v187==(0 -0)) then v188=(function() return 0 -0 ;end)();while true do if (v188==0) then v172[ #"gha"]=(function() return v102() -((1386 -(746 + 638))^16) ;end)();v172[ #"0313"]=(function() return v101();end)();break;end end break;end end end v180=(function() return 1 + 0 ;end)();end if (v180~=1) then else v175=(function() return 1 -0 ;end)();break;end end end end end if (v169~=(870 -(550 + 317))) then else if (v100(v171, #"-19", #"91(")== #"<") then v172[ #"?id="]=(function() return v103[v172[ #"asd1"]];end)();end v104[v105]=(function() return v172;end)();break;end if (v169==(0 -0)) then v170=(function() return v100(v98,2, #"19(");end)();v171=(function() return v100(v98, #"0313",8 -2 );end)();v169=(function() return 1 + 0 ;end)();end end end break;end end return v97,v98,v99,v100,v101,v102,v103,v104,v105;end end end end end;end)();local v53=(function() return function(v107,v108,v109) local v110=(function() return 0 + 0 ;end)();while true do if (v110==(560 -(306 + 254))) then local v126=(function() return 0 -0 ;end)();while true do if (v126==(0 + 0)) then v107[v108-#"}" ]=(function() return v109();end)();return v107,v108,v109;end end end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v67= #"|",v58 do FlatIdent_703C8,Type,v21,Cons,v24,v25,v59,v67=(function() return v51(FlatIdent_703C8,Type,v21,Cons,v24,v25,v59,v67);end)();end v57[ #"xxx"]=(function() return v21();end)();for v68= #"!",v23() do FlatIdent_6D4CB,Descriptor,v21,v20,v22,v23,v59,v54,v68=(function() return v52(FlatIdent_6D4CB,Descriptor,v21,v20,v22,v23,v59,v54,v68);end)();end for v69= #":",v23() do v55,v69,v28=(function() return v53(v55,v69,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[1468 -(899 + 568) ];local v65=v61[2 + (0 -0) ];local v66=v61[7 -4 ];return function(...) local v70=v64;local v71=v65;local v72=v66;local v73=v27;local v74=1213 -(323 + 889) ;local v75= -(2 -1);local v76={};local v77={...};local v78=v12("#",...) -(321 -(53 + 267)) ;local v79={};local v80={};for v111=0 + 0 ,v78 do if (v111>=v72) then v76[v111-v72 ]=v77[v111 + (291 -(60 + 230)) ];else v80[v111]=v77[v111 + (983 -(18 + 964)) ];end end local v81=(v78-v72) + ((789 -(42 + 174)) -((2359 -(565 + 1368)) + 146)) ;local v82;local v83;while true do v82=v70[v74];v83=v82[1 + 0 ];if ((3926<=4134) and (v83<=(1461 -(282 + 1174)))) then if ((v83<=(852 -(20 + 830))) or (164>=2785)) then if (v83<=(811 -(569 + 242))) then v74=v82[8 -5 ];elseif (v83>(1 + 0)) then for v164=v82[1026 -(706 + 318) ],v82[1254 -(721 + 530) ] do v80[v164]=nil;end elseif ((v80[v82[(957 + 316) -(945 + 326) ]]==v82[9 -5 ]) or (525==2109)) then v74=v74 + 1 + 0 ;else v74=v82[(2643 -1940) -(271 + 429) ];end elseif (v83<=(3 + 0)) then v80[v82[1502 -(1408 + 92) ]]=v63[v82[1089 -(461 + 625) ]];elseif (v83==(9 -(1666 -(1477 + 184)))) then local v155=v82[(2117 -563) -(1126 + 425) ];local v156=v80[v155];for v166=v155 + (1289 -(993 + 275 + 20)) ,v82[1 + (859 -(564 + 292)) ] do v156=v156   .. v80[v166] ;end v80[v82[1173 -(418 + 624 + 129) ]]=v156;else do return;end end elseif ((33==33) and (v83<=(4 + (6 -2)))) then if (v83<=(1 + 5)) then v80[v82[(15 -10) -3 ]]();elseif (v83==(3 + 4)) then local v158=0 + 0 + 0 ;local v159;while true do if ((3054<=4015) and (v158==(529 -(406 + 123)))) then v159=v82[1771 -(1749 + 20) ];v80[v159]=v80[v159](v80[v159 + (978 -((857 -(244 + 60)) + (1928 -(363 + 1141)))) ]);break;end end else v80[v82[3 -1 ]]=v82[3 + 0 ];end elseif (v83<=(3 + 6)) then local v133;local v134;local v135;v80[v82[(2904 -(1183 + 397)) -(1249 + 73) ]]=v82[2 + 1 ];v74=v74 + 1 ;v82=v70[v74];v80[v82[1147 -((1418 -952) + 679) ]]=v80[v82[(5 + 1) -3 ]];v74=v74 + ((478 -(41 + 435)) -(1002 -(938 + 63))) ;v82=v70[v74];v135=v82[1903 -(82 + 24 + (2919 -(936 + 189))) ];v134=v80[v135];for v154=v135 + 1 + 0 ,v82[2 + 1 + 1 ] do v134=v134   .. v80[v154] ;end v80[v82[2]]=v134;v74=v74 + 1 + 0 ;v82=v70[v74];v80[v82[(4 + 1) -3 ]]=v63[v82[7 -4 ]];v74=v74 + (115 -(4 + (2085 -(1913 + 62)))) ;v82=v70[v74];v80[v82[586 -(57 + 527) ]]=v80[v82[1430 -(41 + 1386) ]];v74=v74 + (104 -(17 + 86)) ;v82=v70[v74];v133=v82[2 + 0 + 0 ];v80[v133]=v80[v133](v80[v133 + (1203 -(373 + 829)) ]);v74=v74 + ((1139 -(782 + 356)) -0) ;v82=v70[v74];v80[v82[5 -3 ]]=v80[v82[169 -(77 + 45 + 44) ]];v74=v74 + (1131 -(369 + 761)) ;v82=v70[v74];v80[v82[2 -0 ]]=v82[9 -(273 -(176 + 91)) ];elseif (v83>(18 -8)) then if v80[v82[2 + 0 ]] then v74=v74 + 1 + 0 ;else v74=v82[1 + (4 -2) ];end else v80[v82[3 -1 ]]=v80[v82[3]];end v74=v74 + ((96 -30) -(30 + 35)) ;end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
