local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v81=v2(v0(v30,16));if v19 then local v88=0;local v89;while true do if (v88==0) then v89=v5(v81,v19);v19=nil;v88=1;end if (v88==1) then return v89;end end else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=(0 + 0) -0 ;local v83;while true do if (v82==(0 + 0)) then v83=(v31/((879 -(282 + 132 + 463))^(v32-(2 -1))))%((3 -1)^(((v33-1) -(v32-(2 -1))) + (958 -(892 + 65)))) ;return v83-(v83%(620 -(555 + 64))) ;end end else local v84=(933 -(857 + 74))^(v32-(569 -(367 + 201))) ;return (((v31%(v84 + v84))>=v84) and (928 -(214 + 713))) or (117 -((75 -43) + 85)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (3 -1) );v18=v18 + (3 -1) ;return (v36 * (606 -(87 + 263))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + ((727 -544) -(67 + 113)) );v18=v18 + 3 + 1 ;return (v40 * 16777216) + (v39 * (160901 -95365)) + (v38 * (189 + 67)) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=3 -2 ;local v44=(v20(v42,953 -(802 + 150) ,63 -43 ) * ((1 + 1)^(85 -53))) + v41 ;local v45=v20(v42,37 -16 ,23 + 8 );local v46=((v20(v42,1029 -(915 + 82) )==(2 -1)) and  -(1 + 0)) or (1 + 0) ;if (v45==(772 -(201 + (1014 -443)))) then if (v44==(1138 -(116 + (2102 -(1020 + 60))))) then return v46 * ((1423 -(630 + 793)) -0) ;else local v90=0 + 0 ;while true do if (v90==(1187 -(1069 + (399 -281)))) then v45=2 -1 ;v43=0 -0 ;break;end end end elseif (v45==(356 + 1691)) then return ((v44==(0 -0)) and (v46 * ((1 + 0)/((3745 -2954) -(368 + 423))))) or (v46 * NaN) ;end return v8(v46,v45-(56 + 967) ) * (v43 + (v44/((6 -4)^(70 -(10 + 8))))) ;end local function v25(v47) local v48;if  not v47 then v47=v23();if (v47==0) then return "";end end v48=v3(v16,v18,(v18 + v47) -(1 + 0) );v18=v18 + v47 ;local v49={};for v64=3 -2 , #v48 do v49[v64]=v2(v1(v3(v48,v64,v64)));end return v6(v49);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v50=(function() return 0 + 0 ;end)();local v51=(function() return;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();while true do local v66=(function() return 0 + 0 ;end)();while true do if (v66==1) then if (2~=v50) then else v55[ #"xxx"]=(function() return v21();end)();for v98= #"|",v23() do local v99=(function() return v21();end)();if (v20(v99, #",", #"\\")==(574 -(507 + 67))) then local v110=(function() return 0;end)();local v111=(function() return;end)();local v112=(function() return;end)();local v113=(function() return;end)();while true do if ((1751 -(1013 + 736))==v110) then if (v20(v112, #"<", #":")== #"]") then v113[2]=(function() return v57[v113[2 + 0 ]];end)();end if (v20(v112,2,2)== #"[") then v113[ #"19("]=(function() return v57[v113[ #"19("]];end)();end v110=(function() return 7 -4 ;end)();end if (v110~=3) then else if (v20(v112, #"xxx", #"nil")~= #"}") then else v113[ #"xnxx"]=(function() return v57[v113[ #".dev"]];end)();end v52[v98]=(function() return v113;end)();break;end if ((3 -2)==v110) then local v148=(function() return 0;end)();while true do if (v148==0) then v113=(function() return {v22(),v22(),nil,nil};end)();if (v111==(0 -0)) then local v159=(function() return 0 -0 ;end)();local v160=(function() return;end)();while true do if (v159==(0 -0)) then v160=(function() return 0;end)();while true do if (v160~=(285 -(134 + 151))) then else v113[ #"-19"]=(function() return v22();end)();v113[ #"http"]=(function() return v22();end)();break;end end break;end end elseif (v111== #"[") then v113[ #"xnx"]=(function() return v23();end)();elseif (v111==(1667 -(970 + 695))) then v113[ #"-19"]=(function() return v23() -(2^16) ;end)();elseif (v111~= #"xxx") then else local v166=(function() return 0 -0 ;end)();local v167=(function() return;end)();while true do if (v166==(1990 -(582 + 1408))) then v167=(function() return 0;end)();while true do if (v167==(0 -0)) then v113[ #"gha"]=(function() return v23() -((2 -0)^16) ;end)();v113[ #"http"]=(function() return v22();end)();break;end end break;end end end v148=(function() return 1;end)();end if (v148==1) then v110=(function() return 7 -5 ;end)();break;end end end if (v110==(1824 -(1195 + 629))) then v111=(function() return v20(v99,2 -0 , #"-19");end)();v112=(function() return v20(v99, #"asd1",6);end)();v110=(function() return 242 -(187 + 54) ;end)();end end end end for v100= #" ",v23() do v53,v100,v28=(function() return v51(v53,v100,v28);end)();end return v55;end break;end if (v66~=(780 -(162 + 618))) then else if (v50==(0 + 0)) then local v96=(function() return 0;end)();while true do if (v96~=0) then else local v114=(function() return 0;end)();while true do if (v114~=1) then else v96=(function() return 1;end)();break;end if (0==v114) then v51=(function() return function(v154,v155,v156) local v157=(function() return 0 + 0 ;end)();local v158=(function() return;end)();while true do if ((0 -0)==v157) then v158=(function() return 0;end)();while true do if (v158==0) then local v162=(function() return 0;end)();while true do if (0==v162) then v154[v155-#"/" ]=(function() return v156();end)();return v154,v155,v156;end end end end break;end end end;end)();v52=(function() return {};end)();v114=(function() return 1;end)();end end end if (v96~=1) then else v53=(function() return {};end)();v54=(function() return {};end)();v96=(function() return 2 -0 ;end)();end if (v96==2) then v50=(function() return 1;end)();break;end end end if (v50~=(1 + 0)) then else local v97=(function() return 0;end)();while true do if (v97~=1) then else v57=(function() return {};end)();for v116= #"|",v56 do local v117=(function() return 1636 -(1373 + 263) ;end)();local v118=(function() return;end)();local v119=(function() return;end)();while true do if (v117==(1000 -(451 + 549))) then v118=(function() return v21();end)();v119=(function() return nil;end)();v117=(function() return 1;end)();end if (v117==1) then if (v118== #"|") then v119=(function() return v21()~=0 ;end)();elseif (v118==(1 + 1)) then v119=(function() return v24();end)();elseif (v118== #"gha") then v119=(function() return v25();end)();end v57[v116]=(function() return v119;end)();break;end end end v97=(function() return 2 -0 ;end)();end if (2~=v97) then else v50=(function() return 2;end)();break;end if (v97~=0) then else v55=(function() return {v52,v53,nil,v54};end)();v56=(function() return v23();end)();v97=(function() return 1;end)();end end end v66=(function() return 1385 -(746 + 638) ;end)();end end end end local function v29(v58,v59,v60) local v61=v58[1];local v62=v58[1 + 1 ];local v63=v58[4 -(581 -(361 + 219)) ];return function(...) local v67=v61;local v68=v62;local v69=v63;local v70=v27;local v71=1;local v72= -((662 -(53 + 267)) -(218 + 123));local v73={};local v74={...};local v75=v12("#",...) -(1 + 0) ;local v76={};local v77={};for v85=0 + 0 ,v75 do if ((v85>=v69) or (1804>=3275)) then v73[v85-v69 ]=v74[v85 + (561 -((528 -222) + 254)) ];else v77[v85]=v74[v85 + 1 ];end end local v78=(v75-v69) + 1 ;local v79;local v80;while true do v79=v67[v71];v80=v79[1 + 0 ];if (v80<=(1 + 3)) then if ((v80<=(1 -0)) or (1417>3629)) then if ((4795>402) and (v80==(1467 -(899 + 568)))) then if v77[v79[2 + (0 -0) ]] then v71=v71 + (2 -(414 -(15 + 398))) ;else v71=v79[(1588 -(18 + 964)) -(219 + 49 + 335) ];end else do return;end end elseif ((4813>3565) and (v80<=(1 + 1))) then v77[v79[(1098 -806) -(60 + 230) ]]=v77[v79[(333 + 242) -(426 + 146) ]];elseif (v80==(1 + 2)) then local v121;local v122;local v123;v77[v79[1458 -(178 + 104 + 1174) ]]=v79[814 -(569 + 242) ];v71=v71 + 1 ;v79=v67[v71];v77[v79[5 -3 ]]=v79[1 + 2 ];v71=v71 + (1025 -(706 + 318)) ;v79=v67[v71];v77[v79[1253 -(721 + 530) ]]=v77[v79[1274 -(945 + 326) ]];v71=v71 + (2 -(851 -(20 + 830))) ;v79=v67[v71];v77[v79[2 + 0 ]]=v79[3];v71=v71 + (701 -(271 + 429)) ;v79=v67[v71];v77[v79[2]]=v77[v79[3 + (0 -0) ]];v71=v71 + (1501 -(1408 + 92)) ;v79=v67[v71];v123=v79[68 -(30 + 35) ];v122=v77[v123];for v146=v123 + ((849 + 238) -(461 + 625)) ,v79[1292 -(993 + 295) ] do v122=v122   .. v77[v146] ;end v77[v79[(127 -(116 + 10)) + 1 ]]=v122;v71=v71 + (1172 -(418 + 753)) ;v79=v67[v71];v77[v79[1 + 1 ]]=v60[v79[1 + 2 ]];v71=v71 + 1 ;v79=v67[v71];v77[v79[1 + 1 ]]=v77[v79[1 + 0 + 2 ]];v71=v71 + (530 -(406 + 123)) ;v79=v67[v71];v121=v79[1771 -(1749 + 20) ];v77[v121]=v77[v121](v77[v121 + 1 + 0 ]);v71=v71 + (1323 -(1249 + 51 + 22)) ;v79=v67[v71];if v77[v79[1 + (739 -(542 + 196)) ]] then v71=v71 + (1146 -(466 + 679)) ;else v71=v79[6 -3 ];end else v77[v79[5 -(1260 -(1043 + 214)) ]]=v79[1903 -(106 + 1794) ];end elseif (v80<=(2 + 4)) then if (v80>(2 + 3)) then v77[v79[2]]=v60[v79[3]];else local v105=v79[(18 -13) -3 ];v77[v105]=v77[v105](v77[v105 + ((3 -1) -1) ]);end elseif ((3912==3912) and (v80<=(121 -(4 + 110)))) then local v107=v79[(172 + 415) -(57 + 527) ];local v108=v77[v107];for v115=v107 + (1428 -(41 + 1386)) ,v79[107 -(9 + 8 + (1298 -(323 + 889))) ] do v108=v108   .. v77[v115] ;end v77[v79[2]]=v108;elseif (v80==(6 + (5 -3))) then v71=v79[3];else v77[v79[3 -1 ]]();end v71=v71 + (2 -1) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
